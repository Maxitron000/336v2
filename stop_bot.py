
#!/usr/bin/env python3
import os
import signal
import subprocess
import sys

def stop_all_bot_processes():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞"""
    try:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã python —Å main.py
        result = subprocess.run(['pgrep', '-f', 'python.*main.py'], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            pids = result.stdout.strip().split('\n')
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(pids)} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞")
            
            for pid in pids:
                if pid:
                    try:
                        os.kill(int(pid), signal.SIGTERM)
                        print(f"–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å {pid}")
                    except ProcessLookupError:
                        print(f"–ü—Ä–æ—Ü–µ—Å—Å {pid} —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ {pid}: {e}")
        else:
            print("–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")

if __name__ == "__main__":
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞...")
    stop_all_bot_processes()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
