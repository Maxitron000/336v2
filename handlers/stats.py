
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from services.db_service import DatabaseService
from config import MAIN_ADMIN_ID

router = Router()
db = DatabaseService()

@router.message(Command("stats"))
async def cmd_stats(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if message.from_user.id != MAIN_ADMIN_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return
    
    try:
        stats = db.get_current_status()
        
        stats_text = f"""üìä **–¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**

üë• –í—Å–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞: {stats['total']}
‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç: {stats['present']}
‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: {stats['absent']}

**üìç –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ:**
"""
        
        if stats['absent_list']:
            for person in stats['absent_list']:
                stats_text += f"‚Ä¢ {person['name']} ({person['location']})\n"
        else:
            stats_text += "–í—Å–µ –Ω–∞ –º–µ—Å—Ç–µ! ‚úÖ"
        
        await message.answer(stats_text, parse_mode="Markdown")
        
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
