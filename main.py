async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db = DatabaseService()

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        application = Application.builder().token(BOT_TOKEN).build()

        # –£–¥–∞–ª—è–µ–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
        await application.bot.delete_my_commands()
        
        # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
        await application.bot.set_my_commands([])

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–∞
        bot_handler = BotHandler(db)

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
        application.add_handler(CommandHandler("start", bot_handler.start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, bot_handler.handle_message))
        application.add_handler(CallbackQueryHandler(bot_handler.handle_callback))

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
        await application.run_polling()
    except Exception as e:
        print(f"An error occurred: {e}")